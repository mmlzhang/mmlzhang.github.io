<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>14-docker on wiki</title><link>http://mmzhang.github.io/docs/14-docker/</link><description>Recent content in 14-docker on wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://mmzhang.github.io/docs/14-docker/index.xml" rel="self" type="application/rss+xml"/><item><title>01-CentOS7安装docker</title><link>http://mmzhang.github.io/docs/14-docker/01-centos7%E5%AE%89%E8%A3%85docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mmzhang.github.io/docs/14-docker/01-centos7%E5%AE%89%E8%A3%85docker/</guid><description> CentOS 7 安装docker # yum update
vim /etc/yum.repos.d/docker.repo
[dockerrepo] name=Docker Repository baseurl=https://yum.dockerproject.org/repo/main/centos/7/ enabled=1 gpgcheck=1 gpgkey=https://yum.dockerproject.org/gpg yum install docker-engine 安装docker包
systemctl start docker 启动docker服务
mkdir /etc/systemd/system/docker.service.d
vim /etc/sysytemd/system/docker.service.d/http-proxy.conf # 添加代理
[Service] Enviroment=”HTTP_PROXY=http://用户名：密码@代理地址：端口号” 例子 [Service] Environment=&amp;#34;HTTP_PROXY=http://proxy.ip.com:80&amp;#34;</description></item><item><title>02-Docker常用命令</title><link>http://mmzhang.github.io/docs/14-docker/02-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mmzhang.github.io/docs/14-docker/02-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>常用命令
service docker start / stop / restart # 启动 停止 重启 docker images #　查看多有的镜像 docker ps # 查看已启动的容器列表 docker ps -a # 查看docker创建的所有容器 docker创建一个容器
docker run -it -v /docker_test:/yufei --name docker_name -i: 允许对容器内的（STDIN)进行交互 -t: 在新容器内指定一个伪终端或终端 -v: 挂载宿主机的目录， /docker_test是宿机目录，/yufei是当前docker容器的目录，宿机必须是绝对的 --name: 容器的名称，如果省略将会随机产生一个名字 docker启动、停止、重启某个容器
docker start container_name dcoker stop container_name dcokre restart container_name 查看指定容器的日志记录
docker logs -f container_name 删除某个容器
docker rm container_name 删除全部容器
docker rm $(docker ps -a -q) 删除镜像
docker rmi image_name dcoker rmi -f $(docker images) 指定端口映射启动镜像</description></item><item><title>03-docker-compose</title><link>http://mmzhang.github.io/docs/14-docker/03-docker-compose.yaml%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mmzhang.github.io/docs/14-docker/03-docker-compose.yaml%E9%85%8D%E7%BD%AE/</guid><description>docker compose 在 Docker 容器运用中具有很大的学习意义，docker compose 是一个整合发布应用的利器。而使用 docker compose 时，懂得如何编排 docker compose 配置文件是很重要的。
一. 前言 # 关于 docker compose 技术可以查看官方文档 Docker Compose
以下的内容是确立在已经下载好 Docker 以及 Docker Compose，可参看 Docker Compose 的官方安装教程 Install Docker Compose
二. Docker Compose 配置文件的构建参数说明
首先，官方提供了一个 yaml Docker Compose 配置文件的标准例子
version: &amp;ldquo;3&amp;rdquo; services:
redis: image: redis:alpine ports: - &amp;ldquo;6379&amp;rdquo; networks: - frontend deploy: replicas: 2 update_config: parallelism: 2 delay: 10s restart_policy: condition: on-failure
db: image: postgres:9.4 volumes: - db-data:/var/lib/postgresql/data networks: - backend deploy: placement: constraints: [node.</description></item></channel></rss>