<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>25-golang on wiki</title><link>http://mmzhang.github.io/docs/25-golang/</link><description>Recent content in 25-golang on wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://mmzhang.github.io/docs/25-golang/index.xml" rel="self" type="application/rss+xml"/><item><title>面试</title><link>http://mmzhang.github.io/docs/25-golang/%E9%9D%A2%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mmzhang.github.io/docs/25-golang/%E9%9D%A2%E8%AF%95/</guid><description>知乎Go面试题 # 如何知道一个对象是分配在栈上还是堆上 # Go和C++不同，Go局部变量会进行逃逸分析。如果变量离开作用域后没有被引用，则优先分配到栈上，否则分配到堆上。那么如何判断是否发生了逃逸呢？
go build -gcflags '-m -m -l' xxx.go.
关于逃逸的可能情况：变量大小不确定，变量类型不确定，变量分配的内存超过用户栈最大值，暴露给了外部指针</description></item></channel></rss>